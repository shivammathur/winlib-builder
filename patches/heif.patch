From 8ffd61941d518033cc843fdc34fe0a87e7315e46 Mon Sep 17 00:00:00 2001
From: Shivam Mathur <shivam_jpr@hotmail.com>
Date: Wed, 26 Mar 2025 17:46:54 +0000
Subject: [PATCH 1/1] Revert "make find_property() work for all property box
 types (#1261)"

This reverts commit 13116dc0bd81ab095d238e8cb2ebe848d3ca33fd.
---
 libheif/api/libheif/heif_properties.cc | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/libheif/api/libheif/heif_properties.cc b/libheif/api/libheif/heif_properties.cc
index 93d71c93..aa1ec7d1 100644
--- a/libheif/api/libheif/heif_properties.cc
+++ b/libheif/api/libheif/heif_properties.cc
@@ -333,12 +333,10 @@ struct heif_error heif_item_add_raw_property(const struct heif_context* context,
   return heif_error_success;
 }
 
-
-template<typename T>
-struct heif_error find_property(const struct heif_context* context,
+static struct heif_error find_property(const struct heif_context* context,
                                 heif_item_id itemId,
                                 heif_property_id propertyId,
-                                std::shared_ptr<T>* box_casted)
+                                std::shared_ptr<Box_other> *box_other)
 {
   auto file = context->context->get_heif_file();
 
@@ -353,7 +351,7 @@ struct heif_error find_property(const struct heif_context* context,
   }
 
   auto box = properties[propertyId - 1];
-  *box_casted = std::dynamic_pointer_cast<T>(box);
+  *box_other = std::dynamic_pointer_cast<Box_other>(box);
   return heif_error_success;
 }
 
@@ -533,7 +531,7 @@ struct heif_error heif_item_get_property_raw_size(const struct heif_context* con
     return {heif_error_Usage_error, heif_suberror_Null_pointer_argument, "NULL argument passed in"};
   }
   std::shared_ptr<Box_other> box_other;
-  struct heif_error err = find_property<Box_other>(context, itemId, propertyId, &box_other);
+  struct heif_error err = find_property(context, itemId, propertyId, &box_other);
   if (err.code) {
     return err;
   }
@@ -561,7 +559,7 @@ struct heif_error heif_item_get_property_raw_data(const struct heif_context* con
   }
 
   std::shared_ptr<Box_other> box_other;
-  struct heif_error err = find_property<Box_other>(context, itemId, propertyId, &box_other);
+  struct heif_error err = find_property(context, itemId, propertyId, &box_other);
   if (err.code) {
     return err;
   }
-- 
2.49.0

