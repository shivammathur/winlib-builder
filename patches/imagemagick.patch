 Configs/coders/Config.emf.txt | 3 +++
 Configs/coders/Config.exr.txt | 1 +
 src/CommandLineInfo.cpp       | 4 ++--
 src/Options.cpp               | 3 ---
 src/Project.cpp               | 4 +---
 5 files changed, 7 insertions(+), 8 deletions(-)
 create mode 100644 Configs/coders/Config.emf.txt

diff --git a/Configs/coders/Config.emf.txt b/Configs/coders/Config.emf.txt
new file mode 100644
index 0000000..37a08d6
--- /dev/null
+++ b/Configs/coders/Config.emf.txt
@@ -0,0 +1,3 @@
+[CODER]
+
+[MAGICK_PROJECT]
diff --git a/Configs/coders/Config.exr.txt b/Configs/coders/Config.exr.txt
index 9b01923..8271656 100644
--- a/Configs/coders/Config.exr.txt
+++ b/Configs/coders/Config.exr.txt
@@ -2,6 +2,7 @@
 
 [DYNAMIC_DEFINES]
 OPENEXR_DLL
+NOMINMAX
 
 [REFERENCES]
 exr
diff --git a/src/CommandLineInfo.cpp b/src/CommandLineInfo.cpp
index 85ec741..05785c1 100644
--- a/src/CommandLineInfo.cpp
+++ b/src/CommandLineInfo.cpp
@@ -60,8 +60,8 @@ void CommandLineInfo::ParseParam(const wchar_t* pszParam, BOOL bFlag, BOOL bLast
     _options->linkRuntime=TRUE;
   else if (_wcsicmp(pszParam, L"onlyMagick") == 0)
     _options->onlyMagick=TRUE;
-  else if (_wcsicmp(pszParam, L"openCL") == 0)
-    _options->useOpenCL=TRUE;
+  else if (_wcsicmp(pszParam, L"noOpenCL") == 0)
+    _options->useOpenCL=false;
   else if (_wcsicmp(pszParam, L"openPolicy") == 0)
     _options->policyConfig=PolicyConfig::Open;
   else if (_wcsicmp(pszParam, L"Q8") == 0)
diff --git a/src/Options.cpp b/src/Options.cpp
index 0a7df95..4702baa 100644
--- a/src/Options.cpp
+++ b/src/Options.cpp
@@ -64,9 +64,6 @@ const wstring Options::channelMaskDepth() const
   if (!isImageMagick7)
     return(L"");
 
-  if ((visualStudioVersion >= VisualStudioVersion::VS2022) && (architecture != Architecture::x86))
-    return(L"64");
-  else
     return(L"32");
 }
 
diff --git a/src/Project.cpp b/src/Project.cpp
index f72ff18..1fb88b4 100644
--- a/src/Project.cpp
+++ b/src/Project.cpp
@@ -33,7 +33,7 @@ const wstring Project::characterSet() const
 
 const Compiler Project::compiler() const
 {
-  return(_config.isMagickProject() && _options.visualStudioVersion >= VisualStudioVersion::VS2022
+  return(_config.isMagickProject()
     ? Compiler::CPP
     : Compiler::Default);
 }
@@ -417,8 +417,6 @@ void Project::writeCompilationConfiguration(wofstream &file) const
   file << "      <RuntimeLibrary Condition=\"'$(Configuration)'=='Release'\">" << runtimeLibrary(false) << "</RuntimeLibrary>" << endl;
   if (compiler() == Compiler::CPP)
     file << "      <CompileAs>CompileAsCpp</CompileAs>" << endl;
-  if (_config.isMagickProject() && _options.isImageMagick7)
-    file << "      <TreatWarningAsError>true</TreatWarningAsError>" << endl;
   file << "    </ClCompile>" << endl;
   file << "  </ItemDefinitionGroup>" << endl;
 }
-- 
2.51.0

